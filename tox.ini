[tox]
min_version = 4.0
# these are the default environments, i.e. the list of tests running when you
# execute `tox` in the command-line without anything else
envlist =
    lint
    build
    tests

[testenv]
passenv = *
lint_folders = "{toxinidir}/src"

[testenv:lint]
description = Run linters and type checks
package = skip
deps =
    flake8
    flake8-bugbear
    black
    blackdoc
    isort

commands =
    flake8 {[testenv]lint_folders}
    black --check --diff {[testenv]lint_folders}
    blackdoc --check --diff {[testenv]lint_folders}
    isort --check-only --diff {[testenv]lint_folders}

[testenv:format]
description = Abuse tox to do actual formatting on all files.
package = skip
deps =
    black
    blackdoc
    isort
commands =
    isort {[testenv]lint_folders}
    black {[testenv]lint_folders}
    blackdoc {[testenv]lint_folders}

[testenv:tests]
description = Run basic package tests with pytest (not the architectures)
passenv = *
deps =
    pytest

commands =
    pytest --import-mode=append {posargs}

[testenv:build]
description = builds the package and checks integrity
usedevelop = true
deps =
    build
    check-manifest
    twine
allowlist_externals = bash
commands_pre =
    bash -c "if [ -e {toxinidir}/dist/*tar.gz ]; then unlink {toxinidir}/dist/*.whl; fi"
    bash -c "if [ -e {toxinidir}/dist/*tar.gz ]; then unlink {toxinidir}/dist/*.tar.gz; fi"
commands =
    python -m build
    twine check dist/*.tar.gz dist/*.whl
    check-manifest {toxinidir}

[testenv:docs]
# this environement builds the documentation with sphinx
deps =
    -r docs/requirements.txt

commands =
    python -m pip install .
    sphinx-build {posargs:-E} -b html docs/src docs/build/html

[flake8]
# longer lines for compatibility with other linters
max_line_length = 88
extend-ignore = E203

[isort]
profile = black
